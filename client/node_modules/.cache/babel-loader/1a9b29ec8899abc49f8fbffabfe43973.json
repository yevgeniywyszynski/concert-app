{"ast":null,"code":"import axios from 'axios';\nimport { API_URL } from '../config';\n/* SELECTORS */\n\nexport const getSeats = _ref => {\n  let {\n    seats\n  } = _ref;\n  return seats.data;\n};\nexport const getRequests = _ref2 => {\n  let {\n    seats\n  } = _ref2;\n  return seats.requests;\n};\n/* ACTIONS */\n// action name creator\n\nconst reducerName = 'seats';\n\nconst createActionName = name => `app/${reducerName}/${name}`;\n\nconst START_REQUEST = createActionName('START_REQUEST');\nconst END_REQUEST = createActionName('END_REQUEST');\nconst ERROR_REQUEST = createActionName('ERROR_REQUEST');\nconst LOAD_SEATS = createActionName('LOAD_SEATS');\nconst ADD_SEAT = createActionName('ADD_SEAT');\nexport const startRequest = payload => ({\n  payload,\n  type: START_REQUEST\n});\nexport const endRequest = payload => ({\n  payload,\n  type: END_REQUEST\n});\nexport const errorRequest = payload => ({\n  payload,\n  type: ERROR_REQUEST\n});\nexport const loadSeats = payload => ({\n  payload,\n  type: LOAD_SEATS\n});\nexport const addSeat = payload => ({\n  payload,\n  type: ADD_SEAT\n});\n/* THUNKS */\n\nexport const loadSeatsRequest = () => {\n  return async dispatch => {\n    dispatch(startRequest({\n      name: 'LOAD_SEATS'\n    }));\n\n    try {\n      let res = await axios.get(`${API_URL}/seats`);\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      dispatch(loadSeats(res.data));\n      dispatch(endRequest({\n        name: 'LOAD_SEATS'\n      }));\n    } catch (e) {\n      dispatch(errorRequest({\n        name: 'LOAD_SEATS',\n        error: e.message\n      }));\n    }\n  };\n};\nexport const addSeatRequest = seat => {\n  return async dispatch => {\n    dispatch(startRequest({\n      name: 'ADD_SEAT'\n    }));\n\n    try {\n      let res = await axios.post(`${API_URL}/seats`, seat);\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      dispatch(addSeat(res));\n      dispatch(endRequest({\n        name: 'ADD_SEAT'\n      }));\n    } catch (e) {\n      dispatch(errorRequest({\n        name: 'ADD_SEAT',\n        error: e.message\n      }));\n    }\n  };\n};\n/* INITIAL STATE */\n\nconst initialState = {\n  data: [],\n  requests: []\n};\n/* REDUCER */\n\nexport default function reducer() {\n  let statePart = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (action.type) {\n    case LOAD_SEATS:\n      return { ...statePart,\n        data: [...action.payload]\n      };\n\n    case ADD_SEAT:\n      return { ...statePart,\n        data: [...statePart.data, action.payload]\n      };\n\n    case START_REQUEST:\n      return { ...statePart,\n        requests: { ...statePart.requests,\n          [action.payload.name]: {\n            pending: true,\n            error: null,\n            success: false\n          }\n        }\n      };\n\n    case END_REQUEST:\n      return { ...statePart,\n        requests: { ...statePart.requests,\n          [action.payload.name]: {\n            pending: false,\n            error: null,\n            success: true\n          }\n        }\n      };\n\n    case ERROR_REQUEST:\n      return { ...statePart,\n        requests: { ...statePart.requests,\n          [action.payload.name]: {\n            pending: false,\n            error: action.payload.error,\n            success: false\n          }\n        }\n      };\n\n    default:\n      return statePart;\n  }\n}","map":{"version":3,"sources":["/Users/yevgeniywyszynski/wlasnyserver/client/src/redux/seatsRedux.js"],"names":["axios","API_URL","getSeats","seats","data","getRequests","requests","reducerName","createActionName","name","START_REQUEST","END_REQUEST","ERROR_REQUEST","LOAD_SEATS","ADD_SEAT","startRequest","payload","type","endRequest","errorRequest","loadSeats","addSeat","loadSeatsRequest","dispatch","res","get","Promise","resolve","setTimeout","e","error","message","addSeatRequest","seat","post","initialState","reducer","statePart","action","pending","success"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { API_URL } from '../config';\r\n\r\n/* SELECTORS */\r\nexport const getSeats = ({ seats }) => seats.data;\r\nexport const getRequests = ({ seats }) => seats.requests;\r\n\r\n/* ACTIONS */\r\n\r\n// action name creator\r\nconst reducerName = 'seats';\r\nconst createActionName = name => `app/${reducerName}/${name}`;\r\n\r\nconst START_REQUEST = createActionName('START_REQUEST');\r\nconst END_REQUEST = createActionName('END_REQUEST');\r\nconst ERROR_REQUEST = createActionName('ERROR_REQUEST');\r\n\r\nconst LOAD_SEATS = createActionName('LOAD_SEATS');\r\nconst ADD_SEAT = createActionName('ADD_SEAT');\r\n\r\nexport const startRequest = payload => ({ payload, type: START_REQUEST });\r\nexport const endRequest = payload => ({ payload, type: END_REQUEST });\r\nexport const errorRequest = payload => ({ payload, type: ERROR_REQUEST });\r\n\r\nexport const loadSeats = payload => ({ payload, type: LOAD_SEATS });\r\nexport const addSeat = payload => ({ payload, type: ADD_SEAT });\r\n\r\n/* THUNKS */\r\n\r\nexport const loadSeatsRequest = () => {\r\n  return async dispatch => {\r\n\r\n    dispatch(startRequest({ name: 'LOAD_SEATS' }));\r\n    try {\r\n\r\n      let res = await axios.get(`${API_URL}/seats`);\r\n      await new Promise((resolve) => setTimeout(resolve, 2000));\r\n      dispatch(loadSeats(res.data));\r\n      dispatch(endRequest({ name: 'LOAD_SEATS' }));\r\n\r\n    } catch(e) {\r\n      dispatch(errorRequest({ name: 'LOAD_SEATS', error: e.message }));\r\n    }\r\n\r\n  };\r\n};\r\n\r\nexport const addSeatRequest = (seat) => {\r\n  return async dispatch => {\r\n\r\n    dispatch(startRequest({ name: 'ADD_SEAT' }));\r\n    try {\r\n\r\n      let res = await axios.post(`${API_URL}/seats`, seat);\r\n      await new Promise((resolve) => setTimeout(resolve, 1000));\r\n      dispatch(addSeat(res));\r\n      dispatch(endRequest({ name: 'ADD_SEAT' }));\r\n\r\n    } catch(e) {\r\n      dispatch(errorRequest({ name: 'ADD_SEAT', error: e.message }));\r\n    }\r\n\r\n  };\r\n};\r\n\r\n/* INITIAL STATE */\r\n\r\nconst initialState = {\r\n  data: [],\r\n  requests: [],\r\n};\r\n\r\n/* REDUCER */\r\n\r\nexport default function reducer(statePart = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case LOAD_SEATS: \r\n      return { ...statePart, data: [...action.payload] };\r\n    case ADD_SEAT: \r\n      return { ...statePart, data: [...statePart.data, action.payload] }\r\n    case START_REQUEST:\r\n      return { ...statePart, requests: {...statePart.requests, [action.payload.name]: { pending: true, error: null, success: false }} };\r\n    case END_REQUEST:\r\n      return { ...statePart, requests: { ...statePart.requests, [action.payload.name]: { pending: false, error: null, success: true }} };\r\n    case ERROR_REQUEST:\r\n      return { ...statePart, requests: { ...statePart.requests, [action.payload.name]: { pending: false, error: action.payload.error, success: false }} };\r\n    default:\r\n      return statePart;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}